

////////////////////////////////////////////////////////////////////////////////////
// sentences related to ring rewards
////////////////////////////////////////////////////////////////////////////////////

RRP_GAIN(int ptsNow, int sessionType, int ptsTotal)
{
	(sessionType = 0) rrp_gain_novice	[&XP&You earn $ptsNow$ Novice RRP]
	(sessionType = 1) rrp_gain_apprentice	[&XP&You earn $ptsNow$ Apprentice RRP]
	(sessionType = 2) rrp_gain_confirmed	[&XP&You earn $ptsNow$ Confirmed RRP]
	(sessionType = 3) rrp_gain_advanced	[&XP&You earn $ptsNow$ Advanced RRP]
	(sessionType = 4) rrp_gain_expert	[&XP&You earn $ptsNow$ Expert RRP]
	(sessionType = 5) rrp_gain_master	[&XP&You earn $ptsNow$ Master RRP]
}

RRP_GAIN2(int ptsNow, int sessionType, int nbPlayers, int time)
{
	(sessionType = 0) rrp_gain2_novice	[&XP&You earn $ptsNow$ Novice RRP (with $nbPlayers$ players after $time$ seconds of activity)]
	(sessionType = 1) rrp_gain2_apprentice	[&XP&You earn $ptsNow$ Apprentice RRP (with $nbPlayers$ players after $time$ seconds of activity)]
	(sessionType = 2) rrp_gain2_confirmed	[&XP&You earn $ptsNow$ Confirmed RRP (with $nbPlayers$ players after $time$ seconds of activity)]
	(sessionType = 3) rrp_gain2_advanced	[&XP&You earn $ptsNow$ Advanced RRP (with $nbPlayers$ players after $time$ seconds of activity)]
	(sessionType = 4) rrp_gain2_expert	[&XP&You earn $ptsNow$ Expert RRP (with $nbPlayers$ players after $time$ seconds of activity)]
	(sessionType = 5) rrp_gain2_master	[&XP&You earn $ptsNow$ Master RRP (with $nbPlayers$ players after $time$ seconds of activity)]
}

RRP_BONUS(int ptsBonus, int sessionType, int ptsTotal)
{
	(sessionType = 0) rrp_bonus_novice	[&XP&You have gained a BONUS of $ptsBonus$ Novice RRP]
	(sessionType = 1) rrp_bonus_apprentice	[&XP&You have gained a BONUS of $ptsBonus$ Apprentice RRP]
	(sessionType = 2) rrp_bonus_confirmed	[&XP&You have gained a BONUS of $ptsBonus$ Confirmed RRP]
	(sessionType = 3) rrp_bonus_advanced	[&XP&You have gained a BONUS of $ptsBonus$ Advanced RRP]
	(sessionType = 4) rrp_bonus_expert	[&XP&You have gained a BONUS of $ptsBonus$ Expert RRP]
	(sessionType = 5) rrp_bonus_master	[&XP&You have gained a BONUS of $ptsBonus$ Master RRP]
}

RRP_BAD_ACTION(int xpValue)
{
	rrp_bad_action[&XP&Action ignored because too easy (equivalent to $xpValue$ xp)]
}

RRP_BAD_SKILL(int sessionType)
{
	(sessionType = 0) rrp_bad_skill_novice		[&XP&Action below Novice level ignored]
	(sessionType = 1) rrp_bad_skill_apprentice	[&XP&Action below Apprentice level ignored]
	(sessionType = 2) rrp_bad_skill_confirmed	[&XP&Action below Confirmed level ignored]
	(sessionType = 3) rrp_bad_skill_advanced	[&XP&Action below Advanced level ignored]
	(sessionType = 4) rrp_bad_skill_expert		[&XP&Action below Expert level ignored]
	(sessionType = 5) rrp_bad_skill_master		[&XP&Action below Master level ignored]
}

RRP_SESSION_LIMIT_REACHED()
{
	rrp_session_limit_reached[&XP&No more RRP points can be gained this session as you have reached the limit]
}

RRP_PROGRESS(int xpSoFar, int xpRequired, int xpValue)
{
	rrp_progress[&XP&Ring progress $xpSoFar$/$xpRequired$ of next reward points (equivalent to $xpValue$ xp)]
}

RRP_NO_PROGRESS(int time)
{
	rrp_no_progress[&XP&Next ring reward point not yet available ($time$ seconds to go)]
}

RRP_GENERATE_IGNORED()
{
	rrp_generate_ignored[&ITM&You cannot generate ring rewards at this time]
}

RRP_TOO_FEW_ACTIVE_PLAYERS()
{
	rrp_too_few_active_players[&XP&There are too few active players for you to earn Ring Reward Points]
}

RRP_GENERATE_LACK_POINTS(int sessionType,int ptsRequired,int ptsHeld)
{
	(sessionType = 0) rrp_generate_lack_points_novice	[&ITM&You require at least $ptsRequired$ Novice RRP to be worthy of a reward but you only have $ptsHeld$]
	(sessionType = 1) rrp_generate_lack_points_apprentice	[&ITM&You require at least $ptsRequired$ Apprentice RRP to be worthy of a reward but you only have $ptsHeld$]
	(sessionType = 2) rrp_generate_lack_points_confirmed	[&ITM&You require at least $ptsRequired$ Confirmed RRP to be worthy of a reward but you only have $ptsHeld$]
	(sessionType = 3) rrp_generate_lack_points_advanced	[&ITM&You require at least $ptsRequired$ Advanced RRP to be worthy of a reward but you only have $ptsHeld$]
	(sessionType = 4) rrp_generate_lack_points_expert	[&ITM&You require at least $ptsRequired$ Expert RRP to be worthy of a reward but you only have $ptsHeld$]
	(sessionType = 5) rrp_generate_lack_points_master	[&ITM&You require at least $ptsRequired$ Master RRP to be worthy of a reward but you only have $ptsHeld$]
}

RRP_GENERATE_REWARD(int nb, item i, int level)
{
	(nb > 1)
		rrp_generate_reward_pl	[&ITM&You obtain $nb$ $i.p$ of quality $level$ as a Ring Reward]
	(nb = 1)
		rrp_generate_reward_1	[&ITM&You obtain one $i$ of quality $level$ as a Ring Reward]
}

RRP_GENERATE_INVENTORY_FULL()
{
	rrp_generate_inventory_full[&ITM&Your inventory is too full to add any more ring rewards]
}
